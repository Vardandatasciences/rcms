:root {
  /* Modern, professional color palette */
  --primary-color: #2563eb;
  --primary-light: #3b82f6;
  --primary-dark: #1d4ed8;
  --primary-bg: rgba(37, 99, 235, 0.05);
  
  --success-color: #059669;
  --success-light: #10b981;
  --success-dark: #047857;
  --success-bg: rgba(5, 150, 105, 0.05);
  
  --warning-color: #d97706;
  --warning-light: #f59e0b;
  --warning-dark: #b45309;
  --warning-bg: rgba(217, 119, 6, 0.05);
  
  --danger-color: #dc2626;
  --danger-light: #ef4444;
  --danger-dark: #b91c1c;
  --danger-bg: rgba(220, 38, 38, 0.05);
  
  --info-color: #0284c7;
  --info-light: #0ea5e9;
  --info-dark: #0369a1;
  --info-bg: rgba(2, 132, 199, 0.05);
  
  /* Neutral colors */
  --gray-50: #f8fafc;
  --gray-100: #f1f5f9;
  --gray-200: #e2e8f0;
  --gray-300: #cbd5e1;
  --gray-400: #94a3b8;
  --gray-500: #64748b;
  --gray-600: #475569;
  --gray-700: #334155;
  --gray-800: #1e293b;
  --gray-900: #0f172a;
  
  /* Shadows */
  --shadow-xs: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow-sm: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  
  /* Border radius */
  --border-radius-sm: 0.25rem;
  --border-radius-md: 0.375rem;
  --border-radius-lg: 0.5rem;
  --border-radius-xl: 0.75rem;
  --border-radius-full: 9999px;
  
  /* Transitions */
  --transition-fast: 200ms cubic-bezier(0.4, 0, 0.2, 1);
  --transition-normal: 300ms cubic-bezier(0.4, 0, 0.2, 1);
}

/* Base styles */
body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;
  color: var(--gray-800);
  background-color: var(--gray-50);
  line-height: 1.5;
}

.tasks-container {
  min-height: 100vh;
  background: linear-gradient(to bottom right, var(--gray-50), var(--gray-100));
}

.tasks-content {
  padding: 100px 2rem 3rem;
  max-width: 1400px;
  margin: 0 auto;
}

/* Header Styles */
.tasks-content h1 {
  font-size: 2.25rem;
  font-weight: 700;
  color: var(--gray-900);
  margin-bottom: 0.5rem;
  letter-spacing: -0.025em;
  position: relative;
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.tasks-content p {
  color: var(--gray-600);
  font-size: 1.125rem;
  margin-bottom: 2rem;
}

/* Table Container Styles */
.tasks-table-container {
  background-color: white;
  border-radius: var(--border-radius-xl);
  box-shadow: var(--shadow-md);
  overflow: hidden;
  margin-bottom: 2rem;
  animation: fadeInUp 0.5s ease-out;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Table Styles */
.tasks-table {
  width: 100%;
  border-collapse: collapse;
}

.tasks-table th {
  padding: 1rem 1.5rem;
  text-align: left;
  font-weight: 600;
  color: var(--gray-700);
  background-color: var(--gray-50);
  border-bottom: 1px solid var(--gray-200);
  position: relative;
  cursor: pointer;
  transition: all var(--transition-fast);
}

.tasks-table th:hover {
  color: var(--primary-color);
}

.tasks-table td {
  padding: 1rem 1.5rem;
  border-bottom: 1px solid var(--gray-100);
  color: var(--gray-800);
}

.tasks-table tr:last-child td {
  border-bottom: none;
}

.tasks-table tr {
  transition: all var(--transition-fast);
  animation: fadeIn 0.5s ease-out forwards;
  opacity: 0;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.tasks-table tr:hover {
  background-color: var(--gray-50);
}

/* Status badges */
.status-badge {
  display: inline-flex;
  align-items: center;
  padding: 0.375rem 0.75rem;
  border-radius: var(--border-radius-full);
  font-size: 0.75rem;
  font-weight: 600;
}

.status-completed {
  background-color: var(--success-bg);
  color: var(--success-color);
}

.status-in-progress {
  background-color: var(--primary-bg);
  color: var(--primary-color);
}

.status-pending {
  background-color: var(--info-bg);
  color: var(--info-color);
}

.status-overdue {
  background-color: var(--danger-bg);
  color: var(--danger-color);
}

/* Action buttons */
.actions-cell {
  white-space: nowrap;
}

.btn-view,
.btn-update,
.btn-reassign {
  display: inline-flex;
  align-items: center;
  padding: 0.5rem 1rem;
  border: none;
  border-radius: var(--border-radius-lg);
  font-size: 0.875rem;
  font-weight: 600;
  cursor: pointer;
  transition: all var(--transition-fast);
  box-shadow: var(--shadow-sm);
  margin-right: 0.5rem;
}

.btn-view {
  background-color: var(--primary-color);
  color: white;
}

.btn-view:hover {
  background-color: var(--primary-dark);
  transform: translateY(-2px);
  box-shadow: 0 4px 10px rgba(37, 99, 235, 0.3);
}

.btn-update {
  background-color: var(--warning-color);
  color: white;
}

.btn-update:hover {
  background-color: var(--warning-dark);
  transform: translateY(-2px);
  box-shadow: 0 4px 10px rgba(217, 119, 6, 0.3);
}

.btn-reassign {
  background-color: var(--info-color);
  color: white;
}

.btn-reassign:hover {
  background-color: var(--info-dark);
  transform: translateY(-2px);
  box-shadow: 0 4px 10px rgba(2, 132, 199, 0.3);
}

.btn-disabled,
.btn-disabled:hover {
  background-color: var(--gray-300);
  color: var(--gray-500);
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
  opacity: 0.7;
}

/* Loading, error, and no-tasks states */
.loading,
.error-message,
.no-tasks {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 5rem 2rem;
  text-align: center;
  background-color: white;
  border-radius: var(--border-radius-xl);
  box-shadow: var(--shadow-lg);
  animation: fadeIn 0.5s ease-out;
}

.loading {
  color: var(--primary-color);
}

.loading::before {
  content: "";
  width: 50px;
  height: 50px;
  border: 3px solid rgba(59, 130, 246, 0.2);
  border-top: 3px solid var(--primary-color);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1.5rem;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.error-message {
  color: var(--danger-color);
}

.no-tasks {
  color: var(--gray-600);
}

.no-tasks::before {
  content: "ðŸ“‹";
  font-size: 3rem;
  margin-bottom: 1rem;
  opacity: 0.5;
}

/* Animation sequence for table rows */
.tasks-table tr:nth-child(1) { animation-delay: 0.05s; }
.tasks-table tr:nth-child(2) { animation-delay: 0.1s; }
.tasks-table tr:nth-child(3) { animation-delay: 0.15s; }
.tasks-table tr:nth-child(4) { animation-delay: 0.2s; }
.tasks-table tr:nth-child(5) { animation-delay: 0.25s; }
.tasks-table tr:nth-child(6) { animation-delay: 0.3s; }
.tasks-table tr:nth-child(7) { animation-delay: 0.35s; }
.tasks-table tr:nth-child(8) { animation-delay: 0.4s; }
.tasks-table tr:nth-child(9) { animation-delay: 0.45s; }
.tasks-table tr:nth-child(10) { animation-delay: 0.5s; }

/* Add a header section like in Activities.css */
.tasks-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2.5rem;
  position: relative;
}

.tasks-header::after {
  content: '';
  position: absolute;
  bottom: -1.25rem;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(to right, var(--primary-light), transparent);
}

.header-title h1 {
  font-size: 2.25rem;
  font-weight: 700;
  color: var(--gray-900);
  margin-bottom: 0.5rem;
  letter-spacing: -0.025em;
}

.header-title p {
  color: var(--gray-600);
  font-size: 1.125rem;
}

/* Add button similar to Activities */
.btn-add {
  display: flex;
  align-items: center;
  padding: 0.75rem 1.5rem;
  background: linear-gradient(to right, var(--primary-color), var(--primary-light));
  color: white;
  border: none;
  border-radius: var(--border-radius-lg);
  font-weight: 600;
  text-decoration: none;
  transition: all var(--transition-fast);
  box-shadow: 0 4px 14px 0 rgba(37, 99, 235, 0.25);
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.btn-add::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(to right, var(--primary-dark), var(--primary-color));
  z-index: -1;
  transition: opacity var(--transition-fast);
  opacity: 0;
}

.btn-add:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px 0 rgba(37, 99, 235, 0.35);
}

.btn-add:hover::before {
  opacity: 1;
}

.btn-icon {
  margin-right: 0.75rem;
  font-size: 1rem;
}

/* Responsive adjustments */
@media (max-width: 1280px) {
  .tasks-content {
    padding: 80px 2rem 2rem;
  }
}

@media (max-width: 1024px) {
  .tasks-content {
    padding: 80px 1.5rem 2rem;
  }
}

@media (max-width: 768px) {
  .tasks-content {
    padding: 80px 1rem 2rem;
  }
  
  .tasks-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
  
  .btn-add {
    width: 100%;
    justify-content: center;
  }
  
  .tasks-table th,
  .tasks-table td {
    padding: 0.75rem 1rem;
    font-size: 0.9rem;
  }
  
  .actions-cell {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .btn-view,
  .btn-update,
  .btn-reassign {
    padding: 0.375rem 0.75rem;
    font-size: 0.8rem;
    margin-right: 0;
  }
  }
  
  @media (max-width: 480px) {
  .tasks-table-container {
    overflow-x: auto;
  }
  
  .tasks-table {
    min-width: 650px;
  }
}

/* Statistics Cards - Updated with top borders and circular progress */
.statistics-cards {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1.5rem;
  margin-bottom: 2rem;
}

.stat-card {
  display: flex;
  align-items: center;
  padding: 1.5rem;
  background-color: white;
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-sm);
  position: relative;
  cursor: pointer;
  transition: all var(--transition-normal);
  overflow: hidden;
  animation: fadeInUp 0.5s ease-out forwards;
  opacity: 0;
  min-height: 100px;
  /* Remove left border and add top border */
  border-top-width: 3px;
  border-top-style: solid;
}

.stat-card:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-md);
}

.stat-card.active {
  box-shadow: 0 0 0 2px var(--donut-color);
}

/* Replace left border with top border */
.stat-card::before {
  content: none; /* Remove left border indicator */
}

/* Apply top border colors */
.pending-card {
  --color-rgb: 2, 132, 199;
  --donut-color: var(--info-color);
  border-top-color: var(--info-color);
}

.progress-card {
  --color-rgb: 37, 99, 235;
  --donut-color: var(--primary-color);
  border-top-color: var(--primary-color);
}

.completed-card {
  --color-rgb: 5, 150, 105;
  --donut-color: var(--success-color);
  border-top-color: var(--success-color);
}

/* Enhanced icon visibility and animations */
.stat-icon-wrapper {
  width: 45px;
  height: 45px;
  border-radius: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.25rem;
  margin-right: 1.25rem;
  flex-shrink: 0;
  transition: all var(--transition-normal);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  animation: pulseHighlight 2s infinite, fadeIn 0.5s forwards;
  opacity: 0;
}

.pending-card .stat-icon-wrapper {
  color: white;
  background-color: var(--info-color);
  animation-delay: 0.1s;
}

.progress-card .stat-icon-wrapper {
  color: white;
  background-color: var(--primary-color);
  animation-delay: 0.2s;
}

.completed-card .stat-icon-wrapper {
  color: white;
  background-color: var(--success-color);
  animation-delay: 0.3s;
}

/* Enhanced pulse animation for icon visibility */
@keyframes pulseHighlight {
  0% { transform: scale(1); }
  50% { transform: scale(1.08); box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15); }
  100% { transform: scale(1); }
}

.stat-content {
  flex: 1;
}

.stat-count {
  font-size: 2.5rem;
  font-weight: 700;
  line-height: 1;
  margin-bottom: 0.375rem;
  animation: countUp 2s ease-out forwards;
  opacity: 0;
}

@keyframes countUp {
  0% {
    opacity: 0;
    transform: translateY(10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.pending-card .stat-count {
  color: var(--info-color);
  animation-delay: 0.2s;
}

.progress-card .stat-count {
  color: var(--primary-color);
  animation-delay: 0.3s;
}

.completed-card .stat-count {
  color: var(--success-color);
  animation-delay: 0.4s;
}

.stat-title {
  font-size: 0.85rem;
  color: var(--gray-600);
  font-weight: 500;
  animation: fadeIn 0.5s ease-out forwards;
  opacity: 0;
  animation-delay: 0.5s;
}

/* Improved circular progress display */
.stat-percentage {
  margin-left: auto;
  flex-shrink: 0;
}

.circular-progress {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--gray-100);
}

.circular-progress::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: conic-gradient(var(--donut-color) 0%, rgba(var(--color-rgb), 0.1) 0%);
  mask: radial-gradient(white 55%, transparent 0);
  -webkit-mask: radial-gradient(white 55%, transparent 0);
  animation: fillDonut 1.5s ease-out forwards;
}

@keyframes fillDonut {
  0% {
    background: conic-gradient(var(--donut-color) 0%, rgba(var(--color-rgb), 0.1) 0%);
  }
  100% {
    background: conic-gradient(var(--donut-color) calc(var(--percentage) * 3.6deg), rgba(var(--color-rgb), 0.1) 0%);
  }
}

.inner-circle {
  width: 40px;
  height: 40px;
  background-color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.75rem;
  font-weight: 700;
  position: relative;
  z-index: 2;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  animation: fadeIn 0.5s ease-out forwards;
  opacity: 0;
  animation-delay: 1.5s;
}

.pending-card .inner-circle {
  color: var(--info-color);
}

.progress-card .inner-circle {
  color: var(--primary-color);
}

.completed-card .inner-circle {
  color: var(--success-color);
}

/* Add hover effect for cards */
.stat-card:hover:after {
  content: '';
  position: absolute;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.03);
  border-radius: var(--border-radius-lg);
  z-index: -1;
}

/* Animation sequence for statistics cards */
.stat-card:nth-child(1) { animation-delay: 0.1s; }
.stat-card:nth-child(2) { animation-delay: 0.2s; }
.stat-card:nth-child(3) { animation-delay: 0.3s; }

/* Responsive styles for stats cards */
@media (max-width: 768px) {
  .statistics-cards {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
  
  .stat-card {
    padding: 1.25rem;
  }
  
  .circular-progress {
    width: 50px;
    height: 50px;
  }
  
  .inner-circle {
    width: 34px;
    height: 34px;
    font-size: 0.7rem;
  }
}

/* Tools Section - Search, Filters, View Toggle */
.tasks-tools {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  flex-wrap: wrap;
  gap: 1rem;
  background-color: white;
  padding: 1.25rem;
  border-radius: var(--border-radius-xl);
  box-shadow: var(--shadow-md);
  position: sticky;
  top: 80px;
  z-index: 10;
  backdrop-filter: blur(10px);
  animation: fadeInUp 0.5s ease-out;
}

.search-container {
  position: relative;
  flex: 1;
  max-width: 400px;
}

.search-icon {
  position: absolute;
  left: 1rem;
  top: 50%;
  transform: translateY(-50%);
  color: var(--gray-500);
}

.search-input {
  width: 100%;
  padding: 0.875rem 1rem 0.875rem 2.5rem;
  border: 1px solid var(--gray-300);
  border-radius: var(--border-radius-lg);
  font-size: 0.875rem;
  transition: all var(--transition-fast);
  background-color: var(--gray-50);
}

.search-input:focus {
  outline: none;
  border-color: var(--primary-light);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);
  background-color: white;
}

.search-clear {
  position: absolute;
  right: 1rem;
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  color: var(--gray-500);
  font-size: 1.25rem;
  cursor: pointer;
  padding: 0;
  transition: color var(--transition-fast);
}

.search-clear:hover {
  color: var(--gray-800);
}

.filter-container {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.filter-dropdown {
  position: relative;
}

.filter-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  background-color: white;
  border: 1px solid var(--gray-300);
  border-radius: var(--border-radius-lg);
  color: var(--gray-700);
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition-fast);
}

.filter-button:hover, .filter-button.active {
  border-color: var(--primary-light);
  color: var(--primary-color);
  background-color: var(--primary-bg);
}

.filter-button i {
  color: var(--primary-color);
  transition: transform var(--transition-normal);
}

.filter-button:hover i {
  transform: rotate(90deg);
}

.filter-count {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
  background-color: var(--primary-color);
  color: white;
  border-radius: 50%;
  font-size: 0.75rem;
  font-weight: 600;
  margin-left: 0.25rem;
}

.filter-menu {
  position: absolute;
  top: calc(100% + 0.5rem);
  right: 0;
  width: 240px;
  background-color: white;
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-lg);
  padding: 0.75rem;
  z-index: 50;
  animation: zoomIn 0.2s ease-out;
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.filter-section {
  margin-bottom: 1rem;
}

.filter-section:last-child {
  margin-bottom: 0;
}

.filter-menu-header {
  font-weight: 600;
  color: var(--gray-700);
  font-size: 0.875rem;
  padding: 0.5rem 0.75rem;
  margin-bottom: 0.5rem;
  border-bottom: 1px solid var(--gray-200);
}

.filter-menu-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  color: var(--gray-700);
  border-radius: var(--border-radius-md);
  transition: all var(--transition-fast);
  cursor: pointer;
}

.filter-menu-item:hover {
  background-color: var(--gray-100);
}

.filter-menu-item.active {
  background-color: var(--primary-bg);
  color: var(--primary-color);
  font-weight: 500;
}

.filter-menu-item i {
  width: 16px;
  height: 16px;
}

.clear-filters-btn {
  display: block;
  width: 100%;
  padding: 0.625rem;
  margin-top: 0.75rem;
  background-color: var(--gray-100);
  color: var(--gray-700);
  border: none;
  border-radius: var(--border-radius-md);
  font-size: 0.75rem;
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition-fast);
}

.clear-filters-btn:hover {
  background-color: var(--gray-200);
  color: var(--gray-900);
}

.view-toggle {
  display: flex;
  background-color: var(--gray-100);
  border-radius: var(--border-radius-lg);
  padding: 0.25rem;
  box-shadow: var(--shadow-xs);
}

.view-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
  border: none;
  background: transparent;
  color: var(--gray-500);
  border-radius: var(--border-radius-md);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.view-btn:hover {
  color: var(--gray-700);
}

.view-btn.active {
  background-color: white;
  color: var(--primary-color);
  box-shadow: var(--shadow-sm);
}

.btn-refresh {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 42px;
  height: 42px;
  background-color: var(--primary-bg);
  border: none;
  border-radius: var(--border-radius-lg);
  color: var(--primary-color);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.btn-refresh:hover {
  background-color: var(--primary-light);
  color: white;
}

.btn-refresh i {
  transition: transform var(--transition-normal);
}

.btn-refresh:hover i {
  transform: rotate(180deg);
}

/* Task Grid Styles */
.tasks-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: 1.5rem;
  margin-bottom: 2rem;
}

/* Task Card Layout - Updated to match the image */
.task-card {
  display: flex;
  flex-direction: column;
  border-radius: 6px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
  background-color: white;
  position: relative;
  animation: fadeInUp 0.3s ease-out forwards;
  opacity: 0;
  border: 1px solid var(--gray-200);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  overflow: hidden;
  max-height: none; /* Remove max height to ensure all content is visible */
  min-height: 230px; /* Set minimum height to ensure cards look consistent */
  height: auto; /* Allow card to grow based on content */
}

.task-card:hover {
  transform: translateY(-3px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Change top border colors based on status */
.task-card.status-completed-top {
  border-top: 4px solid var(--success-color);
}

.task-card.status-in-progress-top {
  border-top: 4px solid var(--warning-color);
}

/* Change 'Yet to Start' status to use red border */
.task-card.status-pending-top {
  border-top: 4px solid var(--danger-color);
}

.task-card.status-overdue-top {
  border-top: 4px solid var(--danger-color);
}

/* Card header styling to match the image */
.card-header {
  padding: 0.8rem 1rem 0.6rem;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  border-bottom: 1px solid var(--gray-200);
  background-color: white;
}

.header-left {
  display: flex;
  flex-direction: column;
  gap: 0.1rem;
}

.header-right {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex-wrap: wrap;
  justify-content: flex-end;
}

/* Regulation ID styling to match image */
.regulation-id {
  font-family: system-ui, -apple-system, sans-serif;
  font-weight: 600;
  font-size: 0.85rem;
  color: var(--gray-800);
}

.activity-id {
  font-family: system-ui, -apple-system, sans-serif;
  color: var(--gray-500);
  font-size: 0.75rem;
}

/* Enhanced background colors for criticality badges */
.criticality-badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.15rem 0.5rem;
  border-radius: 0.25rem;
  font-size: 0.65rem;
  font-weight: 600;
  text-transform: uppercase;
}

.criticality-high {
  background-color: var(--danger-color) !important;
  color: white !important;
}

.criticality-medium {
  background-color: var(--warning-color) !important;
  color: white !important;
}

.criticality-low {
  background-color: var(--success-color) !important;
  color: white !important;
}

/* Override previous badge styling that might conflict */
.tasks-container .criticality-badge {
  background-color: inherit !important;
  color: inherit !important;
}

/* Add background color to status in the detail section */
.detail-content.status-container {
  background-color: var(--gray-50);
  border-radius: 4px;
  padding: 0.3rem 0.5rem;
}

.detail-content.status-container.status-completed {
  background-color: var(--success-bg);
}

.detail-content.status-container.status-in-progress {
  background-color: var(--warning-bg);
}

.detail-content.status-container.status-pending {
  background-color: var(--info-bg);
}

.detail-content.status-container.status-overdue {
  background-color: var(--danger-bg);
}

/* Change delayed badge to red */
.delayed-badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.15rem 0.5rem;
  background-color: var(--danger-color);
  color: white;
  font-size: 0.65rem;
  font-weight: 500;
  border-radius: 0.25rem;
  text-transform: uppercase;
}

/* Make reassign button more prominent */
.btn-reassign-action-top {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.45rem 0.95rem;
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: 0.25rem;
  font-size: 0.8rem;
  font-weight: 600;
  cursor: pointer;
  transition: all var(--transition-fast);
  box-shadow: var(--shadow-sm);
}

.btn-reassign-action-top:hover {
  background-color: var(--primary-dark);
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.btn-reassign-action-top.btn-disabled {
  background-color: var(--gray-300);
  color: var(--gray-500);
  cursor: not-allowed;
}

/* Card body with task title and details */
.card-body {
  padding: 0.8rem 1rem 1.2rem;
  display: flex;
  flex-direction: column;
  flex: 1;
}

.task-title {
  font-size: 0.95rem;
  font-weight: 600;
  color: var(--gray-800);
  margin-bottom: 0.8rem;
  line-height: 1.3;
  overflow: hidden;
  max-height: 2.6rem; /* Allow for 2 lines of text */
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

/* Task details container to match layout in image */
.task-details-container {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: auto auto;
  row-gap: 1rem;
  column-gap: 1rem;
}

.detail-item {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.detail-label {
  font-size: 0.65rem;
  color: var(--gray-500);
  font-weight: 500;
  letter-spacing: 0.03em;
  text-transform: uppercase;
}

.detail-content {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.detail-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  min-width: 20px; /* Add min-width to prevent icon shrinking */
  color: var(--gray-400);
  font-size: 0.8rem;
}

.detail-icon .fa-circle.status-icon {
  font-size: 0.65rem;
}

/* Status icon colors */
.detail-icon .status-completed,
.fa-circle.status-completed {
  color: var(--success-color);
}

.detail-icon .status-in-progress,
.fa-circle.status-in-progress {
  color: var(--primary-color);
}

.detail-icon .status-pending,
.fa-circle.status-pending {
  color: var(--info-color);
}

.detail-icon .status-overdue,
.fa-circle.status-overdue {
  color: var(--danger-color);
}

/* Status text colors */
.detail-value {
  font-size: 0.8rem;
  color: var(--gray-800);
  font-weight: 500;
  line-height: 1.3;
  overflow: visible; /* Allow text to be fully visible */
  white-space: normal; /* Allow text to wrap to next line */
  word-break: break-word; /* Break long words if needed */
  max-width: 100%; /* Allow text to use full width */
}

/* Status text colors */
.detail-value.status-completed {
  color: var(--success-color);
}

.detail-value.status-in-progress {
  color: var(--primary-color);
}

.detail-value.status-pending {
  color: var(--info-color);
}

.detail-value.status-overdue {
  color: var(--danger-color);
}

/* Make delayed date text red with bold font */
.delayed-text {
  color: var(--danger-color) !important;
  font-weight: 600;
}

/* Animation sequence for cards */
.task-card:nth-child(1) { animation-delay: 0.05s; }
.task-card:nth-child(2) { animation-delay: 0.1s; }
.task-card:nth-child(3) { animation-delay: 0.15s; }
.task-card:nth-child(4) { animation-delay: 0.2s; }
.task-card:nth-child(5) { animation-delay: 0.25s; }
.task-card:nth-child(6) { animation-delay: 0.3s; }

/* Make sure the grid layout adapts properly to screen sizes */
@media (max-width: 1280px) {
  .tasks-grid {
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  }
}

@media (max-width: 768px) {
  .tasks-grid {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  }
}

/* Ensure content fits */
.preparer-value, .reviewer-value {
  max-width: none;
  white-space: normal;
  overflow: visible;
}

/* Update the table row styling to use status-based colors instead of criticality-based colors */
/* Add these styles after the existing table styles */

/* Status-based row styling for table view */
.tasks-table tr.status-completed-row {
  background-color: var(--success-bg);
  border-left: 4px solid var(--success-color);
}

.tasks-table tr.status-in-progress-row {
  background-color: var(--warning-bg);
  border-left: 4px solid var(--warning-color);
}

.tasks-table tr.status-pending-row {
  background-color: var(--info-bg);
  border-left: 4px solid var(--info-color);
}

.tasks-table tr.status-overdue-row {
  background-color: var(--danger-bg);
  border-left: 4px solid var(--danger-color);
}

/* Hover effects for status-colored rows */
.tasks-table tr.status-completed-row:hover {
  background-color: rgba(5, 150, 105, 0.1);
}

.tasks-table tr.status-in-progress-row:hover {
  background-color: rgba(217, 119, 6, 0.1);
}

.tasks-table tr.status-pending-row:hover {
  background-color: rgba(2, 132, 199, 0.1);
}

.tasks-table tr.status-overdue-row:hover {
  background-color: rgba(220, 38, 38, 0.1);
}

/* Override the existing table row status styles that might conflict */
.tasks-table tr.status-completed,
.tasks-table tr.status-in-progress,
.tasks-table tr.status-pending,
.tasks-table tr.status-overdue {
  border-left: none;
  background-color: transparent;
}

/* Make task card headers distinct with warm colors */
.tasks-container .card-header {
  background: white !important;
  color: var(--gray-800) !important;
  border-bottom: 1px solid var(--gray-200);
}

/* Ensure consistent badge styling */
.tasks-container .criticality-badge {
  background-color: rgba(0, 0, 0, 0.05) !important;
  color: var(--gray-700) !important;
}

/* Fix button colors */
.tasks-container .btn-add {
  background: linear-gradient(to right, #B06E45, #8A5A38) !important;
}

.tasks-container .btn-add::before {
  background: #7A4E30 !important;
}

/* Fix hover states */
.tasks-container .filter-button:hover, 
.tasks-container .filter-button.active {
  border-color: #B06E45;
  color: #B06E45;
  background-color: rgba(176, 110, 69, 0.05);
}

.tasks-container .view-btn.active {
  color: #B06E45;
}

/* Fix table header hover */
.tasks-container .tasks-table th:hover {
  color: #B06E45;
}

/* Fix task card actions */
.tasks-container .btn-reassign-action-top:hover {
  background-color: #B06E45;
}

/* Fix refresh button */
.tasks-container .btn-refresh {
  background-color: rgba(176, 110, 69, 0.1);
  color: #B06E45;
}

.tasks-container .btn-refresh:hover {
  background-color: #B06E45;
}
