:root {
  /* Updated professional color palette */
  --primary-color: #1a56db;
  --primary-light: #3f83f8;
  --primary-dark: #1e429f;
  --primary-bg: rgba(26, 86, 219, 0.05);
  
  --success-color: #046c4e;
  --success-light: #0e9f6e;
  --success-dark: #03543f;
  --success-bg: rgba(4, 108, 78, 0.05);
  
  --warning-color: #c05621;
  --warning-light: #dd6b20;
  --warning-dark: #9c4221;
  --warning-bg: rgba(192, 86, 33, 0.05);
  
  --danger-color: #c81e1e;
  --danger-light: #e53e3e;
  --danger-dark: #9b1c1c;
  --danger-bg: rgba(200, 30, 30, 0.05);
  
  --info-color: #065986;
  --info-light: #0b87c9;
  --info-dark: #044e7c;
  --info-bg: rgba(6, 89, 134, 0.05);
  
  /* Updated Neutral colors - more muted */
  --gray-50: #f9fafb;
  --gray-100: #f3f4f6;
  --gray-200: #e5e7eb;
  --gray-300: #d1d5db;
  --gray-400: #9ca3af;
  --gray-500: #6b7280;
  --gray-600: #4b5563;
  --gray-700: #374151;
  --gray-800: #1f2937;
  --gray-900: #111827;
  
  /* Shadows */
  --shadow-xs: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow-sm: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  
  /* Border radius */
  --border-radius-sm: 0.25rem;
  --border-radius-md: 0.375rem;
  --border-radius-lg: 0.5rem;
  --border-radius-xl: 0.75rem;
  --border-radius-2xl: 1rem;
  --border-radius-full: 9999px;
  
  /* Transitions */
  --transition-fast: 200ms cubic-bezier(0.4, 0, 0.2, 1);
  --transition-normal: 300ms cubic-bezier(0.4, 0, 0.2, 1);
}

/* Base styles */
body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;
  color: var(--gray-800);
  background-color: var(--gray-50);
  line-height: 1.5;
}

.activities-container {
  min-height: 100vh;
  background: linear-gradient(to bottom right, var(--gray-50), var(--gray-100));
}

.activities-content {
  padding: 100px 2rem 3rem;
  max-width: 1400px;
  margin: 0 auto;
}

/* Header Styles */
.activities-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2.5rem;
  position: relative;
}

.activities-header::after {
  content: '';
  position: absolute;
  bottom: -1.25rem;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(to right, var(--gray-300), transparent);
}

.header-title h1 {
  font-size: 2.25rem;
  font-weight: 700;
  color: var(--gray-900);
  margin-bottom: 0.5rem;
  letter-spacing: -0.025em;
  position: relative;
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.header-title h1 svg {
  color: var(--primary-color);
}

.header-title p {
  color: var(--gray-600);
  font-size: 1.125rem;
}

.btn-add {
  display: flex;
  align-items: center;
  padding: 0.75rem 1.5rem;
  background: linear-gradient(to bottom, var(--gray-600), var(--gray-700));
  color: white;
  border: none;
  border-radius: var(--border-radius-lg);
  font-weight: 600;
  text-decoration: none;
  transition: all var(--transition-fast);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.btn-add::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--gray-800);
  z-index: -1;
  transition: opacity var(--transition-fast);
  opacity: 0;
}

.btn-add:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px 0 rgba(37, 99, 235, 0.35);
}

.btn-add:hover::before {
  opacity: 1;
}

.btn-icon {
  margin-right: 0.75rem;
  font-size: 1rem;
}

/* Alert Styles */
.alert-error {
  display: flex;
  align-items: center;
  padding: 1rem 1.5rem;
  background-color: var(--danger-bg);
  border-left: 4px solid var(--danger-color);
  border-radius: var(--border-radius-lg);
  margin-bottom: 2rem;
  color: var(--danger-dark);
  box-shadow: var(--shadow-sm);
  animation: slideInDown 0.5s ease-out;
}

@keyframes slideInDown {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.alert-icon {
  margin-right: 1rem;
  font-size: 1.25rem;
  flex-shrink: 0;
}

.btn-close {
  margin-left: auto;
  background: none;
  border: none;
  color: var(--gray-500);
  font-size: 1.25rem;
  cursor: pointer;
  padding: 0.25rem;
  transition: color var(--transition-fast);
}

.btn-close:hover {
  color: var(--gray-800);
}

/* Tools Section */
.activities-tools {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  flex-wrap: wrap;
  gap: 1rem;
  background-color: white;
  padding: 1.25rem;
  border-radius: var(--border-radius-xl);
  box-shadow: var(--shadow-md);
  position: sticky;
  top: 80px;
  z-index: 10;
  backdrop-filter: blur(10px);
  animation: fadeInUp 0.5s ease-out;
}

.search-container {
  position: relative;
  flex: 1;
  max-width: 400px;
}

.search-icon {
  position: absolute;
  left: 1rem;
  top: 50%;
  transform: translateY(-50%);
  color: var(--gray-500);
}

.search-input {
  width: 100%;
  padding: 0.875rem 1rem 0.875rem 2.5rem;
  border: 1px solid var(--gray-300);
  border-radius: var(--border-radius-lg);
  font-size: 0.875rem;
  transition: all var(--transition-fast);
  background-color: var(--gray-50);
}

.search-input:focus {
  outline: none;
  border-color: var(--primary-light);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);
  background-color: white;
}

.search-clear {
  position: absolute;
  right: 1rem;
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  color: var(--gray-500);
  font-size: 1.25rem;
  cursor: pointer;
  padding: 0;
  transition: color var(--transition-fast);
}

.search-clear:hover {
  color: var(--gray-800);
}

.filter-container {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.filter-dropdown {
  position: relative;
}

.filter-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  background-color: white;
  border: 1px solid var(--gray-300);
  border-radius: var(--border-radius-lg);
  color: var(--gray-700);
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition-fast);
}

.filter-button:hover, .filter-button.active {
  border-color: var(--primary-light);
  color: var(--primary-color);
  background-color: var(--primary-bg);
}

.filter-button svg {
  color: var(--primary-color);
  transition: transform var(--transition-normal);
}

.filter-button:hover svg {
  transform: rotate(90deg);
}

.filter-count {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
  background-color: var(--primary-color);
  color: white;
  border-radius: 50%;
  font-size: 0.75rem;
  font-weight: 600;
  margin-left: 0.25rem;
}

.filter-menu {
  position: absolute;
  top: calc(100% + 0.5rem);
  right: 0;
  width: 240px;
  background-color: white;
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-lg);
  padding: 0.75rem;
  z-index: 50;
  animation: zoomIn 0.2s ease-out;
}

.filter-section {
  margin-bottom: 1rem;
}

.filter-section:last-child {
  margin-bottom: 0;
}

.filter-menu-header {
  font-weight: 600;
  color: var(--gray-700);
  font-size: 0.875rem;
  padding: 0.5rem 0.75rem;
  margin-bottom: 0.5rem;
  border-bottom: 1px solid var(--gray-200);
}

.filter-menu-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  color: var(--gray-700);
  border-radius: var(--border-radius-md);
  transition: all var(--transition-fast);
  cursor: pointer;
}

.filter-menu-item:hover {
  background-color: var(--gray-100);
}

.filter-menu-item.active {
  background-color: var(--primary-bg);
  color: var(--primary-color);
  font-weight: 500;
}

.filter-menu-item svg {
  width: 16px;
  height: 16px;
}

.clear-filters-btn {
  display: block;
  width: 100%;
  padding: 0.625rem;
  margin-top: 0.75rem;
  background-color: var(--gray-100);
  color: var(--gray-700);
  border: none;
  border-radius: var(--border-radius-md);
  font-size: 0.75rem;
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition-fast);
}

.clear-filters-btn:hover {
  background-color: var(--gray-200);
  color: var(--gray-900);
}

.view-toggle {
  display: flex;
  background-color: var(--gray-100);
  border-radius: var(--border-radius-lg);
  padding: 0.25rem;
  box-shadow: var(--shadow-xs);
}

.view-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
  border: none;
  background: transparent;
  color: var(--gray-500);
  border-radius: var(--border-radius-md);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.view-btn:hover {
  color: var(--gray-700);
}

.view-btn.active {
  background-color: white;
  color: var(--primary-color);
  box-shadow: var(--shadow-sm);
}

.btn-refresh {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 42px;
  height: 42px;
  background-color: var(--primary-bg);
  border: none;
  border-radius: var(--border-radius-lg);
  color: var(--primary-color);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.btn-refresh-2 {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 202px;
  height: 42px;
}

.btn-refresh:hover {
  background-color: var(--primary-light);
  color: white;
}

/* .btn-refresh-2:hover {
  background-color: var(--primary-light);
  color: white;
} */

.btn-refresh svg {
  transition: transform var(--transition-normal);
}

.btn-refresh:hover svg {
  transform: rotate(180deg);
}

/* Loading State */
.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 5rem 2rem;
  background-color: white;
  border-radius: var(--border-radius-xl);
  box-shadow: var(--shadow-lg);
  animation: fadeIn 0.5s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.loading-spinner {
  width: 50px;
  height: 50px;
  border: 3px solid rgba(59, 130, 246, 0.2);
  border-top: 3px solid var(--primary-color);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1.5rem;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.loading-container p {
  color: var(--gray-600);
  font-size: 1.125rem;
  font-weight: 500;
}

/* No Data State */
.no-activities {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 5rem 2rem;
  background-color: white;
  border-radius: var(--border-radius-xl);
  box-shadow: var(--shadow-lg);
  text-align: center;
  animation: fadeIn 0.5s ease-out;
}

.no-data-icon {
  font-size: 4rem;
  color: var(--gray-400);
  margin-bottom: 1.5rem;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.1); opacity: 0.8; }
  100% { transform: scale(1); opacity: 1; }
}

.no-activities h3 {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--gray-800);
  margin-bottom: 0.75rem;
}

.no-activities p {
  color: var(--gray-600);
  max-width: 400px;
  font-size: 1.125rem;
}

/* Activity Cards */
.activities-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: 1.5rem;
  margin-bottom: 2rem;
}

.activity-card {
  background-color: rgba(255, 255, 255, 0.7);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  border-radius: var(--border-radius-lg);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.03), 0 1px 3px rgba(0, 0, 0, 0.02);
  overflow: hidden;
  transition: all var(--transition-normal);
  display: flex;
  flex-direction: column;
  position: relative;
  height: auto;
  animation: fadeInUp 0.5s ease-out forwards;
  opacity: 0;
  border: 1px solid rgba(204, 204, 204, 0.5);
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.activity-card:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.05), 0 3px 6px rgba(0, 0, 0, 0.02);
  border-color: rgba(153, 153, 153, 0.6);
  background-color: rgba(255, 255, 255, 0.85);
}

.activity-card.criticality-high,
.activity-card.criticality-medium,
.activity-card.criticality-low {
  border-left: 4px solid var(--gray-400);
}

/* Update card header to be more transparent */
.card-header {
  padding: 0.75rem 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid rgba(229, 231, 235, 0.5);
  position: relative;
  background: rgba(255, 255, 255, 0.5) !important;
  color: var(--gray-800);
}

/* Add colored top borders based on criticality */
.activity-card.criticality-high .card-header {
  border-top: 3px solid var(--danger-color);
}

.activity-card.criticality-medium .card-header {
  border-top: 3px solid var(--warning-color);
}

.activity-card.criticality-low .card-header {
  border-top: 3px solid var(--success-color);
}

.card-id {
  display: flex;
  align-items: baseline;
  gap: 0.5rem;
}

.regulation-id {
  font-family: 'SF Mono', 'Consolas', monospace;
  font-weight: 600;
  color: var(--gray-700);
  font-size: 1rem;
}

.activity-id {
  font-family: 'SF Mono', 'Consolas', monospace;
  color: var(--gray-500);
  font-size: 0.875rem;
}

.criticality-badge {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  padding: 0.35rem 0.75rem;
  border-radius: var(--border-radius-full);
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.03em;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.criticality-badge.criticality-high {
  background-color: #fee2e2;
  color: #b91c1c;
}

.criticality-badge.criticality-medium {
  background-color: #ffedd5;
  color: #c2410c;
}

.criticality-badge.criticality-low {
  background-color: #d1fae5;
  color: #065f46;
}

.card-body {
  padding: 1.25rem;
  flex: 1;
  display: flex;
  flex-direction: column;
  background-color: rgba(255, 255, 255, 0.8);
  border-bottom: 1px solid rgba(229, 231, 235, 0.6);
}

.activity-title {
  font-size: 0.95rem;
  font-weight: 600;
  color: var(--gray-800);
  margin-bottom: 0.75rem;
  line-height: 1.4;
  flex: 1;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

.activity-meta {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 0.75rem;
  margin-top: auto;
}

.meta-item {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.meta-label {
  font-size: 0.75rem;
  color: var(--gray-600);
  font-weight: 500;
}

.meta-value {
  font-size: 0.875rem;
  color: var(--gray-800);
  font-weight: 600;
}

.meta-value.status.mandatory {
  color: var(--gray-800);
}

.meta-value.status.optional {
  color: var(--gray-700);
}

.meta-value.frequency {
  font-family: 'SF Mono', 'Consolas', monospace;
}

.card-actions {
  padding: 0.75rem 1.25rem;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  background-color: rgba(246, 246, 246, 0.4);
  border-top: 1px solid rgba(229, 231, 235, 0.5);
}

.btn-action {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  border: none;
  border-radius: var(--border-radius-md);
  background-color: transparent;
  color: var(--gray-700);
  cursor: pointer;
  transition: all var(--transition-fast);
  text-decoration: none;
  box-shadow: none;
}

.btn-action:hover {
  transform: translateY(-2px);
  box-shadow: none;
  color: var(--gray-900);
}

/* Specific icon styling */
.btn-edit {
  color: #404757;
}

.btn-edit:hover {
  color: #2c323e;
}

.btn-delete {
  color: #d32f2f;
}

.btn-delete:hover {
  color: #b71c1c;
}

/* Make icons larger and more visible */
.list-cell svg,
.list-actions svg,
.btn-action svg {
  width: 22px !important;
  height: 22px !important;
  fill: currentColor;
  color: currentColor;
  stroke-width: 0;
  filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.1));
}

/* Fix the assign button styling */
.btn-text-action {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #0d6c56 !important;
  color: white !important;
  font-weight: 600;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: var(--border-radius-md);
  cursor: pointer;
  transition: all var(--transition-fast);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);
  min-width: 100px;
}

.btn-text-action:hover {
  background-color: #065f46 !important;
  transform: translateY(-2px);
}

/* Update assigned button styles */
.btn-text-action.assigned,
.list-btn-text.assigned {
  background-color: #f3f4f6 !important;
  color: #9ca3af !important;
  cursor: not-allowed;
  border: 1px solid #e5e7eb;
  box-shadow: none;
  opacity: 1;
  pointer-events: none;
  transition: none;
  position: relative;
  overflow: hidden;
}

.btn-text-action.assigned:before,
.list-btn-text.assigned:before {
  content: '✓';
  position: absolute;
  left: 8px;
  font-size: 12px;
  color: #9ca3af;
}

.btn-text-action.assigned svg,
.list-btn-text.assigned svg {
  opacity: 0.5;
  color: #9ca3af;
}

.btn-text-action.assigned:hover,
.list-btn-text.assigned:hover {
  background-color: #f3f4f6 !important;
  color: #9ca3af !important;
  transform: none;
  box-shadow: none;
}

/* Add disabled style for the button when it's actually disabled */
.btn-text-action:disabled,
.list-btn-text:disabled {
  background-color: #f3f4f6 !important;
  color: #9ca3af !important;
  cursor: not-allowed;
  border: 1px solid #e5e7eb;
  box-shadow: none;
  opacity: 1;
  pointer-events: none;
}

/* List View */
.activities-list {
  background-color: rgba(255, 255, 255, 0.7);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.03), 0 1px 3px rgba(0, 0, 0, 0.02);
  border: 1px solid rgba(204, 204, 204, 0.5);
  border-radius: var(--border-radius-lg);
  overflow: hidden;
  margin-bottom: 2rem;
  animation: fadeInUp 0.5s ease-out;
  max-height: 80vh;
  overflow: visible;
}

.list-header {
  display: grid;
  grid-template-columns: 1fr 0.5fr 2fr 1fr 1fr 0.8fr 1fr;
  padding: 1rem 1.5rem;
  background-color: rgba(255, 255, 255, 0.5) !important;
  border-bottom: 1px solid rgba(229, 231, 235, 0.5);
  font-weight: 600;
  color: var(--gray-700);
}

.list-cell {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.list-header .list-cell {
  cursor: pointer;
  transition: all var(--transition-fast);
}

.list-header .list-cell:hover {
  color: var(--primary-color);
}

.sort-icon {
  font-size: 0.875rem;
  color: var(--gray-600);
  transition: all var(--transition-fast);
}

.sort-icon.active {
  color: var(--gray-800);
}

.list-header .list-cell:hover .sort-icon {
  color: var(--primary-color);
}

.list-body {
  max-height: 70vh; /* Increased from 600px */
  overflow-y: auto;
  scrollbar-width: thin;
  scrollbar-color: var(--gray-400) var(--gray-100);
}

.list-row {
  display: grid;
  grid-template-columns: 1fr 0.5fr 2fr 1fr 1fr 0.8fr 1fr;
  padding: 1rem 1.5rem;
  border-bottom: 1px solid rgba(243, 244, 246, 0.5);
  transition: all var(--transition-fast);
  animation: fadeIn 0.5s ease-out forwards;
  opacity: 0;
  background-color: rgba(255, 255, 255, 0.2);
}

.list-row:hover {
  background-color: rgba(249, 250, 251, 0.4) !important;
  box-shadow: inset 0 0 0 1px rgba(229, 231, 235, 0.5);
}

.list-row.criticality-high {
  border-left: 4px solid var(--danger-color);
  background-color: rgba(220, 38, 38, 0.01) !important;
}

.list-row.criticality-medium {
  border-left: 4px solid var(--warning-color);
  background-color: rgba(217, 119, 6, 0.01) !important;
}

.list-row.criticality-low {
  border-left: 4px solid var(--success-color);
  background-color: rgba(5, 150, 105, 0.01) !important;
}

.status-badge {
  display: inline-flex;
  align-items: center;
  padding: 0.375rem 0.75rem;
  border-radius: var(--border-radius-full);
  font-size: 0.75rem;
  font-weight: 600;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.status-badge.mandatory {
  background-color: #e8f0fd;
  color: #2c5282;
}

.status-badge.optional {
  background-color: #edf2f7;
  color: #4a5568;
}

.list-actions {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  justify-content: flex-end;
}

/* Footer */
.activities-footer {
  padding: 1rem;
  text-align: center;
  color: var(--gray-600);
  font-size: 0.875rem;
}

/* Responsive adjustments */
@media (max-width: 1280px) {
  .activities-grid {
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  }
}

@media (max-width: 1024px) {
  .activities-grid {
    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
  }
  
  .list-header, .list-row {
    grid-template-columns: 1fr 0.5fr 1.5fr 1fr 1fr 0.8fr 1fr;
  }
}

@media (max-width: 768px) {
  .activities-content {
    padding: 80px 1rem 2rem;
  }
  
  .activities-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
  
  .btn-add {
    width: 100%;
    justify-content: center;
  }
  
  .activities-tools {
    flex-direction: column;
    align-items: stretch;
  }
  
  .search-container {
    max-width: none;
  }
  
  .filter-container {
    justify-content: space-between;
  }
  
  .activities-list {
    overflow-x: auto;
  }
  
  .list-header, .list-row {
    min-width: 900px;
  }
  
  .activity-meta {
    grid-template-columns: 1fr;
  }
}

/* Animation sequence for cards */
.activity-card:nth-child(1) { animation-delay: 0.05s; }
.activity-card:nth-child(2) { animation-delay: 0.1s; }
.activity-card:nth-child(3) { animation-delay: 0.15s; }
.activity-card:nth-child(4) { animation-delay: 0.2s; }
.activity-card:nth-child(5) { animation-delay: 0.25s; }
.activity-card:nth-child(6) { animation-delay: 0.3s; }
.activity-card:nth-child(7) { animation-delay: 0.35s; }
.activity-card:nth-child(8) { animation-delay: 0.4s; }
.activity-card:nth-child(9) { animation-delay: 0.45s; }
.activity-card:nth-child(10) { animation-delay: 0.5s; }

/* Animation sequence for list rows */
.list-row:nth-child(1) { animation-delay: 0.05s; }
.list-row:nth-child(2) { animation-delay: 0.1s; }
.list-row:nth-child(3) { animation-delay: 0.15s; }
.list-row:nth-child(4) { animation-delay: 0.2s; }
.list-row:nth-child(5) { animation-delay: 0.25s; }
.list-row:nth-child(6) { animation-delay: 0.3s; }
.list-row:nth-child(7) { animation-delay: 0.35s; }
.list-row:nth-child(8) { animation-delay: 0.4s; }
.list-row:nth-child(9) { animation-delay: 0.45s; }
.list-row:nth-child(10) { animation-delay: 0.5s; }

/* Adding the statistics cards styles */
.statistics-cards {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1.5rem;
  margin-bottom: 2rem;
  margin-top: -3rem;
}

.stat-card {
  display: flex;
  align-items: center;
  padding: 1rem;
  background-color: rgba(255, 255, 255, 0.7);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  border-radius: var(--border-radius-lg);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.03), 0 1px 3px rgba(0, 0, 0, 0.02);
  position: relative;
  cursor: pointer;
  transition: all var(--transition-normal);
  overflow: hidden;
  animation: fadeInUp 0.5s ease-out forwards;
  opacity: 0;
  height: auto;
  min-height: 60px; /* Optional: Ensure it doesn't get too small */
  border: 1px solid rgba(204, 204, 204, 0.5);
}

.stat-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.05), 0 3px 6px rgba(0, 0, 0, 0.02);
  background-color: rgba(255, 255, 255, 0.85);
}

.stat-card.active {
  border: 2px solid currentColor;
  box-shadow: 0 0 0 2px rgba(var(--color-rgb), 0.2);
}

.stat-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 5px;
  height: 100%;
  transition: all var(--transition-normal);
}

.high-card {
  --color-rgb: 220, 38, 38;
}

.medium-card {
  --color-rgb: 217, 119, 6;
}

.low-card {
  --color-rgb: 5, 150, 105;
}

.high-card::before {
  background-color: var(--danger-color);
}

.medium-card::before {
  background-color: var(--warning-color);
}

.low-card::before {
  background-color: var(--success-color);
}

.stat-icon-wrapper {
  width: 45px;
  height: 45px;
  border-radius: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.25rem;
  margin-right: 1rem;
  flex-shrink: 0;
  transition: all var(--transition-normal);
}

.high-card .stat-icon-wrapper {
  color: white;
  background-color: var(--danger-color);
  animation: pulseHighlight 2s infinite;
}

.medium-card .stat-icon-wrapper {
  color: white;
  background-color: var(--warning-color);
  animation: pulseHighlight 2s infinite;
}

.low-card .stat-icon-wrapper {
  color: white;
  background-color: var(--success-color);
  animation: pulseHighlight 2s infinite;
}

@keyframes pulseHighlight {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

.stat-content {
  flex: 1;
}

.stat-count {
  font-size: 2rem;
  font-weight: 700;
  line-height: 1;
  margin-bottom: 0.25rem;
  animation: countUp 2s ease-out forwards;
  opacity: 0;
}

@keyframes countUp {
  0% {
    opacity: 0;
    transform: translateY(10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.high-card .stat-count {
  color: var(--danger-color);
  animation-delay: 0.2s;
}

.medium-card .stat-count {
  color: var(--warning-color);
  animation-delay: 0.4s;
}

.low-card .stat-count {
  color: var(--success-color);
  animation-delay: 0.6s;
}

.stat-title {
  font-size: 0.75rem;
  color: var(--gray-600);
  font-weight: 500;
  animation: fadeIn 0.5s ease-out forwards;
  opacity: 0;
  animation-delay: 0.3s;
}

.stat-percentage {
  margin-left: auto;
  flex-shrink: 0;
}

.circular-progress {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.high-card .circular-progress {
  --donut-color: var(--danger-color);
}

.medium-card .circular-progress {
  --donut-color: var(--warning-color);
}

.low-card .circular-progress {
  --donut-color: var(--success-color);
}

.circular-progress::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: conic-gradient(var(--donut-color) 0%, rgba(var(--color-rgb), 0.1) 0%);
  mask: radial-gradient(white 55%, transparent 0);
  -webkit-mask: radial-gradient(white 55%, transparent 0);
  animation: fillDonut 1.5s ease-out forwards;
}

@keyframes fillDonut {
  0% {
    background: conic-gradient(var(--donut-color) 0%, rgba(var(--color-rgb), 0.1) 0%);
  }
  100% {
    background: conic-gradient(var(--donut-color) calc(var(--percentage) * 1%), rgba(var(--color-rgb), 0.1) 0%);
  }
}

.inner-circle {
  width: 36px;
  height: 36px;
  background-color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.7rem;
  font-weight: 600;
  position: relative;
  z-index: 2;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.05);
  animation: fadeIn 0.5s ease-out forwards;
  opacity: 0;
}

.high-card .inner-circle {
  color: var(--danger-color);
  animation-delay: 1.5s;
}

.medium-card .inner-circle {
  color: var(--warning-color);
  animation-delay: 1.6s;
}

.low-card .inner-circle {
  color: var(--success-color);
  animation-delay: 1.7s;
}

.high-card .circular-progress::before {
  animation-delay: 0.5s;
}

.medium-card .circular-progress::before {
  animation-delay: 0.7s;
}

.low-card .circular-progress::before {
  animation-delay: 0.9s;
}

/* Statistics animation */
.stat-card {
  opacity: 0;
}

.stat-card:nth-child(1) { animation-delay: 0.1s; }
.stat-card:nth-child(2) { animation-delay: 0.3s; }
.stat-card:nth-child(3) { animation-delay: 0.5s; }

/* Update the top blue headers on activity cards */
.card-id + .criticality-badge {
  background-color: var(--gray-200);
  color: var(--gray-700);
}

/* Update the blue colored activity headers (EPF, EX1001, GOODS) */
div[class^="EX1001"], div[class^="EPF"], div[class^="GOODS"] {
  background: linear-gradient(to right, var(--gray-600), var(--gray-500));
  color: white;
}

/* Directly target the blue headers in activities list */
.activities-grid > div > div:first-child,
.activities-list > div > div:first-child {
  background: linear-gradient(to bottom, var(--gray-500), var(--gray-600));
  color: white;
}

/* Target the specific blue headers shown in the screenshot */
[class*="criticality-high"] .card-header:first-of-type,
[class*="criticality-medium"] .card-header:first-of-type,
[class*="criticality-low"] .card-header:first-of-type {
  background: linear-gradient(to bottom, var(--gray-300), var(--gray-200));
}

/* Important override for the blue headers at the top of each card */
.activity-card > div:first-child {
  background: linear-gradient(to bottom, var(--gray-300), var(--gray-100)) !important;
}

/* Target each blue header from the screenshot using more specific selectors */
div[class*="HIGH"],
div[class*="MEDIUM"] {
  background: linear-gradient(to right, var(--gray-600), var(--gray-500)) !important;
  color: white !important;
}

/* Target the blue buttons in the action section */
.btn-action.btn-edit {
  background-color: var(--gray-600);
}

.btn-action.btn-edit:hover {
  background-color: var(--gray-700);
}

/* This is a critical override to target those specific blue headers */
.activities-grid > div,
.activities-list > div {
  border-radius: var(--border-radius-lg);
  overflow: hidden;
}

/* Direct targeting of the blue headers with HIGH indicator */
[class*="HIGH"],
[class*="MEDIUM"],
[class*="EPF"],
[class*="EX1001"],
[class*="GOODS"] {
  background: linear-gradient(to right, var(--gray-600), var(--gray-500)) !important;
  color: white !important;
}

/* Target the blue header bars in activities very specifically */
.activities-container .card-header {
  background: white !important;
  color: var(--gray-800) !important;
  border-bottom: 1px solid var(--gray-200);
}

.activities-container .custom-header {
  background: white !important;
  color: var(--gray-800) !important;
}

/* Reset any conflicting styles from other components */
.activities-container [class*="HIGH"],
.activities-container [class*="MEDIUM"],
.activities-container [class*="EPF"],
.activities-container [class*="EX1001"],
.activities-container [class*="GOODS"] {
  background: white !important;
  color: var(--gray-800) !important;
  border-radius: 4px 4px 0 0;
}

/* For blue badges */
.activities-container .gray-badge {
  background-color: var(--gray-200) !important;
  color: var(--gray-700) !important;
}

/* Make activity cards distinctive */
.activities-container .activity-card {
  border: 1px solid #CCCCCC;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.activities-container .activity-card:hover {
  border-color: #999999;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

.activities-container .activity-card .card-actions {
  background-color: #F6F6F6;
}

/* Fix any remaining blue elements */
.activities-container .btn-refresh {
  background-color: rgba(110, 110, 110, 0.1);
  color: #505050;
}

.activities-container .btn-refresh:hover {
  background-color: #6E6E6E;
  color: white;
}

.activities-container .status-badge.mandatory {
  background-color: rgba(110, 110, 110, 0.1);
  color: #505050;
}

/* Fix active button states */
.activities-container .view-btn.active {
  background-color: white;
  color: #505050;
}

/* Override any remaining blue styles */
.activities-container .meta-value.status.mandatory {
  color: #505050;
}

/* Fix for the top blue headers in each card */
.activities-container .activities-grid > div > div:first-child {
  background: white !important;
  color: var(--gray-800) !important;
}

/* Fix sort icon colors */
.activities-container .sort-icon.active,
.activities-container .list-header .list-cell:hover .sort-icon,
.activities-container .list-header .list-cell:hover {
  color: #505050;
}

/* Extremely specific overrides to handle any remaining conflicts */
.activities-container div[class*="EX1001"]:not(.activities-container *),
.activities-container div[class*="EPF"]:not(.activities-container *),
.activities-container div[class*="GOODS"]:not(.activities-container *) {
  background: white !important;
  color: var(--gray-800) !important;
}

/* Target the specific blue headers in the image */
body .activities-container div[id^="EX"],
body .activities-container div[id^="EPF"],
body .activities-container div[id^="GOODS"] {
  background: white !important;
  color: var(--gray-800) !important;
}

/* Additional direct targeting for the blue headers */
body .activities-container div[class*="HIGH"],
body .activities-container div[class*="MEDIUM"] {
  background: white !important;
  color: var(--gray-800) !important;
}

/* Inline style overrides if needed */
.activities-container [style*="background"] {
  background: white !important;
}

/* Keep the dark headers for list view but make them more professional */
.activities-list > div > div:first-child,
.list-header {
  background: white !important;
  color: var(--gray-700) !important;
  font-weight: 600;
  border-bottom: 1px solid var(--gray-300);
  padding: 0.75rem 1rem;
}

/* Add distinct background colors to list rows based on criticality */
.list-row.criticality-high {
  border-left: 4px solid var(--danger-color);
  background-color: rgba(220, 38, 38, 0.02);
}

.list-row.criticality-medium {
  border-left: 4px solid var(--warning-color);
  background-color: rgba(217, 119, 6, 0.02);
}

.list-row.criticality-low {
  border-left: 4px solid var(--success-color);
  background-color: rgba(5, 150, 105, 0.02);
}

/* Enhanced hover effect on list rows */
.list-row:hover {
  background-color: var(--gray-50) !important;
  box-shadow: inset 0 0 0 1px var(--gray-200);
}

/* Make sure list row colors don't get overridden */
.activities-container .list-row.criticality-high {
  background-color: rgba(220, 38, 38, 0.01) !important;
}

.activities-container .list-row.criticality-medium {
  background-color: rgba(217, 119, 6, 0.01) !important;
}

.activities-container .list-row.criticality-low {
  background-color: rgba(5, 150, 105, 0.01) !important;
}

/* Override for list headers to ensure they remain professional */
.activities-container .list-header,
.activities-container [id="Regulation ID"],
.activities-container [id^="EPF"]:first-child,
.activities-container [id^="EX1001"]:first-child {
  background: white !important;
  color: var(--gray-700) !important;
}

/* Add scrolling for list view */
.list-body {
  max-height: 600px;
  overflow-y: auto;
  scrollbar-width: thin;
  /* scrollbar-color: var(--gray-400) var(--gray-100); */
}

/* Scrollbar styling for WebKit browsers (Chrome, Safari) */
.list-body::-webkit-scrollbar {
  width: 6px;
}

.list-body::-webkit-scrollbar-track {
  /* background: var(--gray-100); */
  border-radius: 3px;
}

.list-body::-webkit-scrollbar-thumb {
  /* background-color: var(--gray-400); */
  border-radius: 3px;
}

/* Make list view container have proper borders and shadows */
.activities-list {
  border: 1px solid var(--gray-300);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-md);
  overflow: hidden;
}

/* Ensure alternating rows have subtle distinction */
.list-row:nth-child(even) {
  background-color: var(--gray-50);
}

/* Update first row to have plain background */
.list-row:first-child {
  background-color: white !important;
}

/* Improve icon visibility in the list view */
.list-cell svg,
.list-actions svg,
.btn-action svg {
  width: 18px;
  height: 18px;
  fill: currentColor;
  color: currentColor;
  stroke-width: 0;
  filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.2));
}

/* Fix the red content areas from the cards */
.activity-card > div:nth-child(2) {
  background-color: rgba(255, 255, 255, 0.8) !important;
  color: var(--gray-800) !important;
}

/* Specific color overrides for the red/orange background content areas */
[class*="EPF"] > div:nth-child(2),
[class*="EX1001"] > div:nth-child(2),
[class*="GOODS"] > div:nth-child(2) {
  background-color: rgba(255, 255, 255, 0.85) !important;
  color: var(--gray-800) !important;
  border-bottom: 1px solid rgba(229, 231, 235, 0.6);
}

/* Make the background extremely light for the colored content areas */
.activity-card .card-body[style*="background"] {
  background: rgba(255, 255, 255, 0.9) !important;
}

/* Target the specific red backgrounds in the middle section */
.activity-title + div {
  background-color: transparent !important;
}

/* Override for the card title area with red backgrounds */
.activity-card > div:nth-child(2) {
  background: rgba(255, 255, 255, 0.85) !important;
}

/* Fix the colored backgrounds (red, orange) in the content sections */
.activity-card[style*="background"],
.activity-title[style*="background"],
.activity-meta[style*="background"] {
  background: rgba(255, 255, 255, 0.85) !important;
}

/* Target all red/orange colored sections - very broad but necessary */
[style*="background-color: rgb(220"],
[style*="background-color: rgb(217"],
[style*="background-color: rgb(226"] {
  background-color: rgba(255, 255, 255, 0.85) !important;
}

/* Add specific targeting for the colored sections shown in your screenshot */
[style*="#d97706"],
[style*="#dc2626"],
[style*="#16a34a"],
[style*="#e25949"] {
  background-color: rgba(255, 255, 255, 0.9) !important;
  color: var(--gray-800) !important;
}

/* Set specific styling for labels and values */
.meta-label {
  color: var(--gray-600);
}

.meta-value {
  color: var(--gray-800);
}

/* Fix the status badges to look better */
.status-badge {
  background-color: rgba(237, 242, 247, 0.8);
  color: var(--gray-700);
}

/* Make the assign button more visible against the lighter backgrounds */
.btn-text-action {
  background-color: #0d6c56 !important;
  color: white !important;
  border: none;
}

.btn-text-action:hover {
  background-color: #065f46 !important;
}

.btn-text-action.assigned {
    background-color: #e9ecef;
    color: #6c757d;
    cursor: not-allowed;
    border: 1px solid #dee2e6;
}

.btn-text-action.assigned:hover {
    background-color: #e9ecef;
    color: #6c757d;
    transform: none;
    box-shadow: none;
}

.list-btn-text.assigned {
    background-color: #e9ecef;
    color: #6c757d;
    cursor: not-allowed;
    border: 1px solid #dee2e6;
}

.list-btn-text.assigned:hover {
    background-color: #e9ecef;
    color: #6c757d;
    transform: none;
    box-shadow: none;
}